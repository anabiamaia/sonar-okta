{"remainingRequest":"/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/node_modules/babel-loader/lib/index.js!/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/src/components/Profile.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/src/components/Profile.vue","mtime":1641931337523},{"path":"/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/babel.config.js","mtime":1641930633127},{"path":"/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/node_modules/cache-loader/dist/cjs.js","mtime":1641930628823},{"path":"/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/node_modules/babel-loader/lib/index.js","mtime":1641930629479},{"path":"/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/node_modules/cache-loader/dist/cjs.js","mtime":1641930628823},{"path":"/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/node_modules/vue-loader-v16/dist/index.js","mtime":1641930629471}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2FuYS1zaWx2YTEvRG9jdW1lbnRvcy9TT0xJTkZURUMvSkFWQS9kZXNzYWZpby1qYXZhL29rdGEtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQcm9maWxlJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2xhaW1zOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IE9iamVjdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGF1dGguZ2V0VXNlcigpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQudDAuZW50cmllcy5jYWxsKF9jb250ZXh0LnQwLCBfY29udGV4dC50MSkubWFwKGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgY2xhaW06IGVudHJ5WzBdLAogICAgICAgICAgICAgICAgICB2YWx1ZTogZW50cnlbMV0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgX3RoaXMuY2xhaW1zID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["/home/ana-silva1/Documentos/SOLINFTEC/JAVA/dessafio-java/okta-app/src/components/Profile.vue"],"names":[],"mappings":";;;;;;AAwBA,eAAe;AACb,EAAA,IAAI,EAAE,SADO;AAEb,EAAA,IAFa,kBAEL;AACN,WAAO;AACL,MAAA,MAAM,EAAE;AADH,KAAP;AAGD,GANY;AAOP,EAAA,OAPO,qBAOI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACK,MADL;AAAA;AAAA,qBAC0B,KAAI,CAAC,KAAL,CAAW,OAAX,EAD1B;;AAAA;AAAA;AAAA;AAAA,iCACY,OADZ,gCACgD,GADhD,CACoD,UAAA,KAAI;AAAA,uBAAM;AAAE,kBAAA,KAAK,EAAE,KAAK,CAAC,CAAD,CAAd;AAAmB,kBAAA,KAAK,EAAE,KAAK,CAAC,CAAD;AAA/B,iBAAN;AAAA,eADxD;;AAAA;AACf,cAAA,KAAI,CAAC,MADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjB;AATa,CAAf","sourcesContent":["<template>\n  <div id=\"profile\">\n    <h1>My User Profile (ID Token Claims)</h1>\n    <p>\n      Below is the information from your ID token.\n    </p>\n    <table>\n      <thead>\n      <tr>\n        <th>Claim</th>\n        <th>Value</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(claim, index) in claims\" :key=\"index\">\n        <td>{{claim.claim}}</td>\n        <td :id=\"'claim-' + claim.claim\">{{claim.value}}</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Profile',\n  data () {\n    return {\n      claims: []\n    }\n  },\n  async created () {\n    this.claims = await Object.entries(await this.$auth.getUser()).map(entry => ({ claim: entry[0], value: entry[1] }))\n  }\n}\n</script>"],"sourceRoot":""}]}